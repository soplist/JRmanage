package com.bureau.biz.impl;


import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.bureau.biz.CarrecordBiz;
import com.bureau.biz.PrivatecarBiz;
import com.bureau.dao.CarrecordDao;
import com.bureau.dao.PrivatecarDao;
import com.bureau.pojo.Carrecord;
import com.bureau.pojo.Lunch;
import com.bureau.pojo.PageData;
import com.bureau.pojo.Privatecar;

public class CarrecordBizImpl implements CarrecordBiz {
	//注入Dao
	private CarrecordDao carrecordDao;
	
	public void setCarrecordDao(CarrecordDao carrecordDao) {
		this.carrecordDao = carrecordDao;
	}
	//分页查询
	public PageData<Carrecord> findAll(Carrecord ca, String idStart, String idEnd) {
		String hql="from Carrecord p";
		String counthql="select count(p.id) from Carrecord p";
		Map<String, Object> params=new HashMap<String, Object>();
		//模糊查询追加条件
		if(ca.getCarid()!=null && idStart.isEmpty() && idEnd.isEmpty()){
			hql+=" where p.carid like :carid";
			counthql+=" where p.carid like :carid";
			params.put("carid", "%"+ca.getCarid()+"%");
		}else if(ca.getCarid()==null && idStart !=null && idEnd != null){
			hql+=" where p.starttime between :a and :b";
			counthql+=" where p.starttime between :a and :b";
			params.put("a", idStart);
			params.put("b", idEnd);
		}else if(ca.getCarid()!=null && !idStart.isEmpty() && !idEnd.isEmpty()){
			hql+=" where p.carid like :carid and p.starttime between :a and :b";
			counthql+=" where p.carid like :carid and p.starttime between :a and :b";
			params.put("carid", "%"+ca.getCarid()+"%");
			params.put("a", idStart);
			params.put("b", idEnd);
		}else{//查询获取所有(两个月内)总条数,从lastdate到nowdate
			DateFormat dformat = DateFormat.getDateInstance();
	  		String nowdate = dformat.format(new Date());//当月
	  		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  
	 		 Calendar lastDate = Calendar.getInstance();  
	 		 lastDate.set(Calendar.DATE, 1);// 设为当前月的1号  
	 		 lastDate.add(Calendar.MONTH, -2);//两月前  
	 		String lastdate = sdf.format(lastDate.getTime()); 
			System.out.println(idEnd+idStart);
			hql+=" where p.starttime between :a and :b";
			counthql+=" where p.starttime between :a and :b";
			params.put("a", lastdate);
			params.put("b", nowdate);
		}
		
		hql+=" order by p.id desc";
		counthql+=" order by p.id desc";
		System.out.println("hql--"+hql);
		//查询所有用户
		List<Carrecord> prs = carrecordDao.list(hql, params,
				(ca.getPage()-1)*ca.getRows(),ca.getRows());
		PageData<Carrecord> prr=new PageData<Carrecord>();
		//查询用户的数量
		Integer total = carrecordDao.count(counthql, params);
		//放入pageDate
		prr.setRows(prs);
		prr.setTotal(total);
		return prr;
	}
	public List<Carrecord> findBytime(String carid, String idStart, String idEnd){
		String hql="from Carrecord p";
		Map<String, Object> params=new HashMap<String, Object>();
		if(carid!=null && idStart.isEmpty() && idEnd.isEmpty()){
			hql+=" where p.carid like :carid";
			params.put("carid", "%"+carid+"%");
		}else if(carid==null && !idStart.isEmpty() && !idEnd.isEmpty()){
			hql+=" where p.starttime between :a and :b";
			params.put("a", idStart);
			params.put("b", idEnd);
		}else if(carid!=null && !idStart.isEmpty() && !idEnd.isEmpty()){
			hql+=" where p.carid like :carid and p.starttime between :a and :b";
			params.put("carid", "%"+carid+"%");
			params.put("a", idStart);
			params.put("b", idEnd);
		}else{//查询获取所有(两个月内)总条数,从lastdate到nowdate
			DateFormat dformat = DateFormat.getDateInstance();
	  		String nowdate = dformat.format(new Date());//当月
	  		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  
	 		 Calendar lastDate = Calendar.getInstance();  
	 		 lastDate.set(Calendar.DATE, 1);// 设为当前月的1号  
	 		 lastDate.add(Calendar.MONTH, -2);//两月前  
	 		String lastdate = sdf.format(lastDate.getTime()); 
			System.out.println(idEnd+idStart);
			hql+=" where p.starttime between :a and :b";
			params.put("a", lastdate);
			params.put("b", nowdate);
		}
		List<Carrecord> car = carrecordDao.list(hql, params);
		return car;
	}
	//增加
	public boolean add(Carrecord ca) {
		return carrecordDao.add(ca);
	}
	//修改
	public boolean upd(Carrecord ca) {
		return carrecordDao.upd(ca);
	}
	//删除
	public boolean del(Carrecord ca) {
		return carrecordDao.del(ca);
	}
	//根据ID查询
	public Carrecord findById(int id) {
		return carrecordDao.get(id);
	}
		
}