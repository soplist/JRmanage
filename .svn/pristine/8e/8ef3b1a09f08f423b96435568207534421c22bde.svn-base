package com.bureau.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.IOUtils;
import org.apache.struts2.ServletActionContext;

import Decoder.BASE64Encoder;

import com.bureau.biz.NoticeBiz;
import com.bureau.biz.UserBiz;
import com.bureau.pojo.Notice;
import com.bureau.pojo.PageData;
import com.bureau.pojo.QUser;
import com.bureau.pojo.TempJson;
import com.bureau.unit.Quarter;
import com.bureau.unit.SysConst;
import com.opensymphony.xwork2.ModelDriven;

public class NoticeAction extends BaseAction implements ModelDriven<Notice> {
	//注入ncBiz/userBiz
	private NoticeBiz ncBiz;
	private UserBiz userBiz;
	
	
	private File pic;
	private String picContextType;
	private String picFileName;
	private String fileName;
	InputStream fileInputStream;
	OutputStream out;
	
	private String name;
	private String phone;
	
	//获取前台传参数：公告id
	private Integer ncid;
	public Integer getNcid() {
		return ncid;
	}
	public void setNcid(Integer ncid) {
		this.ncid = ncid;
	}
	//模糊搜索企业参数
	private String schep;
	public String getSchep() {
		return schep;
	}
	public void setSchep(String schep) {
		this.schep = schep;
	}
	
	//实体类 and model
	private Notice nc;
	public Notice getModel() {
		if (nc == null) {
			nc = new Notice();
		}
		return nc;
	}
	public Notice getNc() {
		return nc;
	}
	public void setNc(Notice nc) {
		this.nc = nc;
	}

	public File getPic() {
		return pic;
	}
	public void setPic(File pic) {
		this.pic = pic;
	}

	public String getPicContextType() {
		return picContextType;
	}

	public void setPicContextType(String picContextType) {
		this.picContextType = picContextType;
	}

	public String getPicFileName() {
		return picFileName;
	}

	public void setPicFileName(String picFileName) {
		this.picFileName = picFileName;
	}

	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getPhone() {
		return phone;
	}
	public void setPhone(String phone) {
		this.phone = phone;
	}
	public InputStream getFileInputStream() {
		return fileInputStream;
	}
	public void setFileInputStream(InputStream fileInputStream) {
		this.fileInputStream = fileInputStream;
	}
	public String getFileName() {
		return fileName;
	}
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}
	public void setNcBiz(NoticeBiz ncBiz) {
		this.ncBiz = ncBiz;
	}
	public void setUserBiz(UserBiz userBiz) {
		this.userBiz = userBiz;
	}
	private static String getFileCode(String fileName){
		String  extension=fileName.substring(fileName.lastIndexOf("."), fileName.length());
		//获得时间代码
		DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
        String code = df.format(new Date(System.currentTimeMillis()));
        return code+extension;
	}
	//增加新闻
	public void add() throws UnsupportedEncodingException{
		TempJson tj=new TempJson();
		tj.setMessage(SysConst.ADDFAIL);
		boolean res = false;	
		//上传文件
		if(picFileName == null){//如果不上传附件
        	nc.setFname("无");
        }else{//如果上传附件
        	String fileCode = getFileCode(picFileName);

        	String dic=ServletActionContext.getServletContext().getRealPath("pic");
    		String path=dic+File.separator+fileCode;
    		//保存图片
    		try {
    			IOUtils.copy(new FileInputStream(pic), new FileOutputStream(new File(path)));
    			nc.setFname(picFileName);
    			nc.setFilecode(fileCode);
    		} catch (FileNotFoundException e) {
    			e.printStackTrace();
    		} catch (IOException e) {
    			e.printStackTrace();
    		}
        }
		
		
		QUser us = (QUser) session.get("login_users");
		QUser qu = userBiz.findUserByLname(us.getLname());
		nc.setCreate(Quarter.getNowTime());
		//nc.setUser(qu);
		res = ncBiz.add(nc);
		if(res){
			tj.setMessage(SysConst.ADDSUCCESS);
			tj.setSuccess(true);
		}
		this.writeJSON(tj);
	}
	public void filedown() throws IOException{
		
		Notice n = ncBiz.findById(nc.getId());
		fileName = n.getFname();
		
		
		HttpServletRequest request = ServletActionContext.getRequest();
		String userAgent = ((HttpServletRequest) request).getHeader("User-Agent");
		if (userAgent.contains("MSIE") || userAgent.contains("Trident")) {
			fileName = java.net.URLEncoder.encode(fileName, "UTF-8");
		}else if (userAgent.contains("Firefox")) {
			BASE64Encoder base64Encoder = new BASE64Encoder();
			fileName = "=?utf-8?B?"+ base64Encoder.encode(fileName.getBytes("utf-8")) + "?=";
		}
		else {
			// 非IE浏览器的处理：
			fileName = new String(fileName.getBytes("UTF-8"), "ISO-8859-1");
		}
		
		fileName = fileName.toString().trim();
		String dic=ServletActionContext.getServletContext().getRealPath("pic/"+n.getFilecode());
		//response.setHeader("content-disposition", "attachment;fileName="+URLEncoder.encode(fileName,"UTF-8").replaceAll("\\+", "%20").replaceAll("%28", "\\(").replaceAll("%29", "\\)").replaceAll("%3B", ";").replaceAll("%40", "@").replaceAll("%23", "\\#").replaceAll("%26", "\\&").replaceAll("%2C","\\,"));
		response.setHeader("content-disposition", "attachment;fileName="+fileName.replaceAll("\\+", "%20").replaceAll("%28", "\\(").replaceAll("%29", "\\)").replaceAll("%3B", ";").replaceAll("%40", "@").replaceAll("%23", "\\#").replaceAll("%26", "\\&").replaceAll("%2C","\\,"));
		byte[] bytes=new byte[1024];
		int len=0;
		try {
			fileInputStream = new FileInputStream(dic);
			out=response.getOutputStream();
			while((len=fileInputStream.read(bytes))>0){
				out.write(bytes, 0, len);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}finally{
			if(fileInputStream!=null){
				fileInputStream.close();
			}
			if(out!=null){
				out.close();
			}
		}
	}
	//删除新闻
	public void del(){
		try{
		    TempJson tj=new TempJson();
		    tj.setMessage(SysConst.DELFAIL);
		    
		    nc = ncBiz.findById(nc.getId());
		    //删除文件夹的文件
		    String dic = ServletActionContext.getServletContext().getRealPath("pic/"+nc.getFilecode());
		    File file = new File(dic);
		    if (file.isFile())
                file.delete();
		    boolean res = ncBiz.del(nc);
		
		    if(res){
			    tj.setMessage(SysConst.DELSUCCESS);
			    tj.setSuccess(true);
		    }
		    this.writeJSON(tj);
		}catch(Exception ex){
			ex.printStackTrace();
		}
	}
	//分页查询新闻
	public void findAll(){
		PageData<Notice> pd = new PageData<Notice>();
		pd = ncBiz.findAll(nc);
		this.writeJSON(pd,new String[]{"projectses","notices","logs","supers","qRoles","declares","tbcounts","objectives","honors","bases","brands","qUsers","abilities","projectsesForStateId","projectsesForNature"});
	}
	//查询倒序前十条公告12-20吕文
	public void list(){
		List<Notice> nc=ncBiz.findAll();
		this.writeJSON(nc,new String[]{"projectses","notices","logs","supers","qRoles","declares","tbcounts","objectives","honors","bases","brands","qUsers","abilities","projectsesForStateId","projectsesForNature"});
	}
	//查询公告详情12-20吕文
	public void findById(){
		System.out.println("id="+nc.getId());
		nc=ncBiz.findById(nc.getId());
		this.writeJSON(nc,new String[]{"projectses","notices","logs","supers","qRoles","declares","tbcounts","objectives","honors","bases","brands","qUsers","abilities","projectsesForStateId","projectsesForNature"});
	}
	

}
